[tool.poetry]
name = "surface_analysis_monorepo"
version = "0.0.1"
description = ""
authors = ["Matthew Ord <mo433@cam.ac.uk>"]
readme = "README.md"
packages = [
    { include = "_main", from = "src/main" },
    { include = "copper_100", from = "src/copper_100" },
    { include = "copper_111", from = "src/copper_111" },
    { include = "nickel_111", from = "src/nickel_111" },
    { include = "platinum_111", from = "src/platinum_111" },
    { include = "ruthenium_100", from = "src/ruthenium_100" },
]

[tool.poetry.scripts]
main = '_main.main:main'

[tool.poetry.dependencies]
python = ">=3.12,<3.13"
numpy = "^1.26.3"
matplotlib = "^3.8.2"
scipy = "^1.12.0"
hamiltonian_generator = { path = "src/hamiltonian_generator/", develop = true }

[tool.poetry.group.dev.dependencies]
black = "^23.1.0"
mypy = "*"
ruff = "*"

[tool.mypy]
strict = true
follow_imports = "error"
# enable_incomplete_feature = "Unpack"
# enable_incomplete_feature = "TypeVarTuple"

[[tool.mypy.overrides]]
module = "matplotlib.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "scipy.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "qutip.*"
ignore_missing_imports = true

[tool.pyright]
reportUnknownMemberType = "information"
reportMissingTypeStubs = "information"
include = ["src"]

[tool.ruff.lint]
preview = true
select = ["ALL"]
ignore = [
    "COM812",
    "E501",
    "ANN101",
    "S101",
    "D100",
    "D101",
    "D103",
    "D104",
    "D105",
    "CPY001",
]
exclude = ["typings/**/*"]

[tool.ruff.pydocstyle]
convention = "numpy"

[tool.ruff.isort]
required-imports = ["from __future__ import annotations"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
